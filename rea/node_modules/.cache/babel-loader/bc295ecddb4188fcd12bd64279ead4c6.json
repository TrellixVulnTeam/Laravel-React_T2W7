{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Laravel-React\\\\rea\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { path_server } from \"../../Constants\";\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router';\nimport Image from \"react-bootstrap/Image\";\nimport './login.scss';\nimport AlertDismissible from \"../../AlertDismissible\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  let navigate = useNavigate();\n\n  const axios = require('axios');\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [submitted, setSubmitted] = useState(\"\");\n  const props = {\n    title: title,\n    description: \"\",\n    display: true,\n    setShow: true,\n    type: \"danger\"\n  };\n\n  function validateForm() {\n    //return email.length > 0 && password.length > 0;\n    return true;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const userData = {\n      email: email,\n      password: password\n    };\n    axios.post(path_server + \"/api/login\", userData).then(res => {\n      if (res.length === 0) {\n        return Promise.reject(new Error(\"Empty list!\"));\n      }\n\n      if (res) {\n        setToken(res.data.token);\n        navigate('/user');\n      }\n    }).catch(error => {\n      setSubmitted(true);\n      setTitle(error.response.statusText);\n      return Promise.reject(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [submitted && /*#__PURE__*/_jsxDEV(AlertDismissible, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerBackground\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginLeft\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"http://intranet.genetech.pk/intranet/assets/images/white_logo.png\",\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginRight\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              size: \"lg\",\n              type: \"submit\",\n              disabled: !validateForm()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"WRr09oNktwX1fqNGKX3rGnQqSCE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/xampp/htdocs/Laravel-React/rea/src/components/Login/Login.js"],"names":["path_server","React","useState","useEffect","Form","Button","PropTypes","useNavigate","Image","AlertDismissible","Login","setToken","navigate","axios","require","email","setEmail","password","setPassword","title","setTitle","submitted","setSubmitted","props","description","display","setShow","type","validateForm","handleSubmit","event","preventDefault","userData","post","then","res","length","Promise","reject","Error","data","token","catch","error","response","statusText","e","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { path_server} from \"../../Constants\";\r\nimport React,{useState, useEffect} from \"react\"\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router';\r\nimport Image from \"react-bootstrap/Image\";\r\nimport './login.scss';\r\nimport  AlertDismissible  from \"../../AlertDismissible\";\r\n\r\n\r\nfunction Login({setToken}){\r\n    let navigate = useNavigate();\r\n\r\n    const axios = require('axios');\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [submitted, setSubmitted] = useState(\"\");\r\n  \r\n\r\n    const props = {\r\n      title:title,\r\n      description:\"\",\r\n      display:true,\r\n      setShow:true,\r\n      type:\"danger\"\r\n    }\r\n\r\n    function validateForm() {\r\n      //return email.length > 0 && password.length > 0;\r\n      return true;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n      event.preventDefault();\r\n      const userData = {\r\n        email: email,\r\n        password:password\r\n      }\r\n      axios.post(path_server+\"/api/login\", userData)\r\n      .then(res => {\r\n      \r\n        if (res.length === 0) {\r\n          return Promise.reject(new Error(\"Empty list!\"));\r\n        }\r\n        if(res){\r\n          setToken(res.data.token);\r\n          navigate('/user')\r\n        }\r\n\r\n      }).catch(error => { \r\n        setSubmitted(true);\r\n        setTitle(error.response.statusText)\r\n        return Promise.reject(error); \r\n      });\r\n\r\n    }\r\n\r\n    return (\r\n      <section>\r\n        {submitted && <AlertDismissible props={props} />}\r\n      <div className=\"headerBackground\">\r\n        \r\n        <div className=\"loginLeft\">\r\n        <Image src=\"http://intranet.genetech.pk/intranet/assets/images/white_logo.png\" fluid />\r\n\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group size=\"lg\" controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}></Button>\r\n            </Form.Group>\r\n            \r\n          </Form>\r\n        </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Login;\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}
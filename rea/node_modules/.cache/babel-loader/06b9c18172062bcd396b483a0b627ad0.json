{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Laravel-React\\\\rea\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route, Routes } from \"react-router\";\nimport './App.css';\nimport Login from './components/Sementics/Main/Login/Login';\nimport User from './components/Sementics/Main/User/User';\nimport Main from './components/Sementics/Main/Main';\nimport Profile from './components/Sementics/Main/User/Profile';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch } from \"react-redux\";\nimport { clearMessage } from \"./actions/message\";\nimport UserService from \"./services/user.service\";\nimport { LoggedInUser } from \"./actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const { user: currentUser } = useSelector((state) => state.auth);\n\n  /*   const { \r\n      user: currentUser, \r\n      userData: currentUserData,\r\n    } = useSelector((state) => state.auth); */\n  // console.log(useSelector((state) => state.auth));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    //history.listen((location) => {\n    dispatch(clearMessage()); // clear message when changing location\n    //});\n  }, [dispatch]);\n  UserService.getUserProfile().then(response => {\n    //setUser(response.data.user);\n    dispatch(LoggedInUser(response.data.user)).then(() => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 35\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/user\",\n              element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }).catch(() => {});\n    return response;\n  }, error => {\n    const _content = error.response && error.response.data || error.message || error.toString(); //setUser(_content);\n\n\n    return _content;\n  });\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/Laravel-React/rea/src/App.js"],"names":["React","useEffect","Route","Routes","Login","User","Main","Profile","useDispatch","clearMessage","UserService","LoggedInUser","App","dispatch","getUserProfile","then","response","data","user","catch","error","_content","message","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,yCAAlB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb;;AACF;AACA;AACA;AACA;AAEE;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACEY,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR,CAFY,CAEc;AAC5B;AACD,GAJQ,EAIN,CAACI,QAAD,CAJM,CAAT;AAMAH,EAAAA,WAAW,CAACI,cAAZ,GAA6BC,IAA7B,CACGC,QAAD,IAAc;AACZ;AACAH,IAAAA,QAAQ,CAACF,YAAY,CAACK,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAb,CAAR,CACCH,IADD,CACM,MAAM;AACV,0BACE;AAAA,+BACI,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,oBAAhB;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,uBADF;AAaD,KAfD,EAgBCI,KAhBD,CAgBO,MAAM,CACZ,CAjBD;AAkBA,WAAOH,QAAP;AACD,GAtBH,EAuBGI,KAAD,IAAW;AACT,UAAMC,QAAQ,GACXD,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeC,IAAlC,IACAG,KAAK,CAACE,OADN,IAEAF,KAAK,CAACG,QAAN,EAHF,CADS,CAKP;;;AACA,WAAOF,QAAP;AACH,GA9BH;AAkCC;;GAnDMT,G;UASUJ,W;;;KATVI,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React,{useEffect} from \"react\"\r\nimport { Route, Routes } from \"react-router\";\r\nimport './App.css';\r\nimport Login from './components/Sementics/Main/Login/Login';\r\nimport User from './components/Sementics/Main/User/User';\r\nimport Main from './components/Sementics/Main/Main';\r\nimport Profile from './components/Sementics/Main/User/Profile';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearMessage } from \"./actions/message\";\r\nimport UserService from \"./services/user.service\";\r\nimport { LoggedInUser } from \"./actions/auth\";\r\n\r\n\r\nfunction App() {\r\n\r\n  // const { user: currentUser } = useSelector((state) => state.auth);\r\n/*   const { \r\n    user: currentUser, \r\n    userData: currentUserData,\r\n  } = useSelector((state) => state.auth); */\r\n\r\n  // console.log(useSelector((state) => state.auth));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    //history.listen((location) => {\r\n      dispatch(clearMessage()); // clear message when changing location\r\n    //});\r\n  }, [dispatch]);\r\n\r\n  UserService.getUserProfile().then(\r\n    (response) => {\r\n      //setUser(response.data.user);\r\n      dispatch(LoggedInUser(response.data.user))\r\n      .then(() => {\r\n        return (\r\n          <>\r\n              <Routes>\r\n                  <Route path=\"/login\" element={<Login />} />\r\n                  <Route element={<Main />}>\r\n                    <Route path=\"/user\" element={<User />} />\r\n                    <Route path=\"/profile\" element={<Profile />} />\r\n                  </Route>\r\n              </Routes>\r\n          </>\r\n      \r\n           \r\n          );\r\n      })\r\n      .catch(() => {\r\n      });\r\n      return response;\r\n    },\r\n    (error) => {\r\n      const _content =\r\n        (error.response && error.response.data) ||\r\n        error.message ||\r\n        error.toString();\r\n        //setUser(_content);\r\n        return _content;\r\n    }\r\n  );\r\n\r\n   \r\n  }\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
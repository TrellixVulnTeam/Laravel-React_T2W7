{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_DATA, LOGOUT } from \"../actions/type\";\nimport UserService from \"../../../../services/user.service\";\nUserService.getUserProfile().then(response => {\n  // setUser(response.data.user);\n  return response;\n}, error => {\n  const _content = error.response && error.response.data || error.message || error.toString(); // setUser(_content);\n\n\n  return _content;\n});\nconst state = {\n  auth: JSON.parse(localStorage.getItem(\"user\")),\n  user: {}\n};\nconst initialState = state ? {\n  isLoggedIn: true,\n  state\n} : {\n  isLoggedIn: false,\n  state: null\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return { ...state,\n        isLoggedIn: false\n      };\n\n    case REGISTER_FAIL:\n      return { ...state,\n        isLoggedIn: false\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        isLoggedIn: true\n      };\n\n    case LOGIN_FAIL:\n      return { ...state,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case LOGOUT:\n      return { ...state,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case USER_DATA:\n      return { ...state,\n        isLoggedIn: true,\n        userData: payload.userData\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/xampp/htdocs/Laravel-React/rea/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_DATA","LOGOUT","UserService","getUserProfile","then","response","error","_content","data","message","toString","state","auth","JSON","parse","localStorage","getItem","user","initialState","isLoggedIn","action","type","payload","userData"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,SALJ,EAMIC,MANJ,QAOS,iBAPT;AAQE,OAAOC,WAAP,MAAwB,mCAAxB;AAEIA,WAAW,CAACC,cAAZ,GAA6BC,IAA7B,CACCC,QAAD,IAAc;AACZ;AAEA,SAAOA,QAAP;AACD,CALD,EAMCC,KAAD,IAAW;AACT,QAAMC,QAAQ,GACXD,KAAK,CAACD,QAAN,IAAkBC,KAAK,CAACD,QAAN,CAAeG,IAAlC,IACAF,KAAK,CAACG,OADN,IAEAH,KAAK,CAACI,QAAN,EAHF,CADS,CAKP;;;AACA,SAAOH,QAAP;AACH,CAbD;AAeJ,MAAMI,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADM;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAd;AAKA,MAAMC,YAAY,GAAGP,KAAK,GACtB;AAAEQ,EAAAA,UAAU,EAAE,IAAd;AAAoBR,EAAAA;AAApB,CADsB,GAEtB;AAAEQ,EAAAA,UAAU,EAAE,KAAd;AAAqBR,EAAAA,KAAK,EAAE;AAA5B,CAFJ;AAIA,eAAe,YAAwC;AAAA,MAA9BA,KAA8B,uEAAtBO,YAAsB;AAAA,MAARE,MAAQ;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKzB,gBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELQ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKtB,aAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELQ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKrB,aAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELQ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAKF,SAAKpB,UAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELQ,QAAAA,UAAU,EAAE,KAFP;AAGLF,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKhB,MAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELQ,QAAAA,UAAU,EAAE,KAFP;AAGLF,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKjB,SAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELQ,QAAAA,UAAU,EAAE,IAFP;AAGLI,QAAAA,QAAQ,EAAED,OAAO,CAACC;AAHb,OAAP;;AAKF;AACE,aAAOZ,KAAP;AApCJ;AAsCD","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_DATA,\r\n    LOGOUT,\r\n  } from \"../actions/type\";\r\n  import UserService from \"../../../../services/user.service\";\r\n\r\n      UserService.getUserProfile().then(\r\n      (response) => {\r\n        // setUser(response.data.user);\r\n       \r\n        return response;\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n          // setUser(_content);\r\n          return _content;\r\n      }\r\n    );\r\n  const state = {\r\n    auth: JSON.parse(localStorage.getItem(\"user\")),\r\n    user: {}\r\n  };\r\n  \r\n  const initialState = state\r\n    ? { isLoggedIn: true, state }\r\n    : { isLoggedIn: false, state: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          \r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case USER_DATA:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          userData: payload.userData,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}
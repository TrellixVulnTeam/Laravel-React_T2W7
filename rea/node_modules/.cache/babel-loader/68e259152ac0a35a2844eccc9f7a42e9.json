{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Laravel-React\\\\rea\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Routes } from \"react-router\";\nimport './App.css';\nimport Login from './components/Sementics/Main/Login/Login';\nimport User from './components/Sementics/Main/User/User';\nimport Main from './components/Sementics/Main/Main';\nimport Profile from './components/Sementics/Main/User/Profile';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearMessage } from \"./actions/message\";\nimport UserService from \"./services/user.service\";\nimport { LoggedInUser } from \"./actions/auth\";\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const { user: currentUser } = useSelector((state) => state.auth);\n\n  /*   const { \r\n      user: currentUser, \r\n      userData: currentUserData,\r\n    } = useSelector((state) => state.auth); */\n  // console.log(useSelector((state) => state.auth));\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  useEffect(() => {\n    //history.listen((location) => {\n    dispatch(clearMessage()); // clear message when changing location\n    //});\n  }, [dispatch]);\n\n  const UserCheck = () => {\n    UserService.getUserProfile().then(response => {\n      dispatch(LoggedInUser(response.data.user)).then(() => {}).catch(() => {});\n      return response;\n    }, error => {\n      navigate('/login');\n\n      const _content = error.response && error.response.data || error.message || error.toString();\n\n      return _content;\n    });\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\",\n          element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"s5YDugppCHA/sTog5Ue+JVWibms=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/Laravel-React/rea/src/App.js"],"names":["React","useState","useEffect","Route","Routes","Login","User","Main","Profile","useDispatch","useSelector","clearMessage","UserService","LoggedInUser","useNavigate","App","dispatch","navigate","UserCheck","getUserProfile","then","response","data","user","catch","error","_content","message","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,yCAAlB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,QAA4B,cAA5B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;;AACF;AACA;AACA;AACA;AAEE;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAIQ,QAAQ,GAAGH,WAAW,EAA1B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACEc,IAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR,CAFY,CAEc;AAC5B;AACD,GAJQ,EAIN,CAACK,QAAD,CAJM,CAAT;;AAQA,QAAME,SAAS,GAAG,MAAM;AACtBN,IAAAA,WAAW,CAACO,cAAZ,GAA6BC,IAA7B,CACGC,QAAD,IAAc;AACZL,MAAAA,QAAQ,CAACH,YAAY,CAACQ,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAb,CAAR,CACCH,IADD,CACM,MAAM,CAEX,CAHD,EAICI,KAJD,CAIO,MAAM,CACZ,CALD;AAMA,aAAOH,QAAP;AACD,KATH,EAUGI,KAAD,IAAW;AACTR,MAAAA,QAAQ,CAAC,QAAD,CAAR;;AACA,YAAMS,QAAQ,GACXD,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeC,IAAlC,IACAG,KAAK,CAACE,OADN,IAEAF,KAAK,CAACG,QAAN,EAHF;;AAIE,aAAOF,QAAP;AACH,KAjBH;AAoBA,WAAO,EAAP;AACD,GAtBD;;AAwBE,sBACA;AAAA,2BACI,QAAC,MAAD;AAAA,8BAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADA;AAcD;;GA1DMX,G;UASUN,W,EACFK,W;;;KAVRC,G;AA2DT,eAAeA,GAAf","sourcesContent":["import React,{useState, useEffect} from \"react\"\r\nimport { Route, Routes } from \"react-router\";\r\nimport './App.css';\r\nimport Login from './components/Sementics/Main/Login/Login';\r\nimport User from './components/Sementics/Main/User/User';\r\nimport Main from './components/Sementics/Main/Main';\r\nimport Profile from './components/Sementics/Main/User/Profile';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearMessage } from \"./actions/message\";\r\nimport UserService from \"./services/user.service\";\r\nimport { LoggedInUser } from \"./actions/auth\";\r\nimport { useNavigate } from 'react-router';\r\n\r\nfunction App() {\r\n\r\n  // const { user: currentUser } = useSelector((state) => state.auth);\r\n/*   const { \r\n    user: currentUser, \r\n    userData: currentUserData,\r\n  } = useSelector((state) => state.auth); */\r\n\r\n  // console.log(useSelector((state) => state.auth));\r\n  const dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    //history.listen((location) => {\r\n      dispatch(clearMessage()); // clear message when changing location\r\n    //});\r\n  }, [dispatch]);\r\n\r\n\r\n  \r\n  const UserCheck = () => {\r\n    UserService.getUserProfile().then(\r\n      (response) => {\r\n        dispatch(LoggedInUser(response.data.user))\r\n        .then(() => {\r\n          \r\n        })\r\n        .catch(() => {\r\n        });\r\n        return response;\r\n      },\r\n      (error) => {\r\n        navigate('/login')\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n          return _content;\r\n      }\r\n    );\r\n\r\n    return(\"\");\r\n  }\r\n\r\n    return (\r\n    <>\r\n        <Routes>\r\n        {/* <Route path=\"/\" element={<UserCheck />} /> */}\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route element={<Main />}>\r\n              <Route path=\"/user\" element={<User />} />\r\n              <Route path=\"/profile\" element={<Profile />} />\r\n            </Route>\r\n        </Routes>\r\n    </>\r\n\r\n     \r\n    );\r\n  }\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
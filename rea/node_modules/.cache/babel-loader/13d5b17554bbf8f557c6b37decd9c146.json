{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Laravel-React\\\\rea\\\\src\\\\components\\\\Sementics\\\\Main\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useNavigate } from 'react-router';\nimport Image from \"react-bootstrap/Image\";\nimport './login.scss';\nimport AlertDismissible from \"../../../../AlertDismissible\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../../../actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [submitted, setSubmitted] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n  console.log(message);\n  const props = {\n    message: message,\n    display: true\n  };\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0; // return true;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setLoading(true);\n    dispatch(login(email, password)).then(() => {\n      navigate('/profile');\n    }).catch(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [message && /*#__PURE__*/_jsxDEV(AlertDismissible, {\n      props: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerBackground\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginLeft\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"../assets/login/white_logo.png\",\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginRight\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              size: \"lg\",\n              type: \"submit\",\n              disabled: !validateForm(),\n              children: loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Login, \"CgyFEslIig1TCNHW9Jo/gBsU/Ag=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/xampp/htdocs/Laravel-React/rea/src/components/Sementics/Main/Login/Login.js"],"names":["React","useState","useEffect","Form","Button","useNavigate","Image","AlertDismissible","useDispatch","useSelector","login","Login","navigate","email","setEmail","password","setPassword","data","setData","submitted","setSubmitted","loading","setLoading","isLoggedIn","state","auth","message","dispatch","console","log","props","display","validateForm","length","handleSubmit","event","preventDefault","then","catch","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\"\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from 'react-router';\r\nimport Image from \"react-bootstrap/Image\";\r\nimport './login.scss';\r\nimport  AlertDismissible  from \"../../../../AlertDismissible\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../../../actions/auth\";\r\n\r\n\r\nconst Login = () => {\r\n    let navigate = useNavigate();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [data, setData] = useState(\"\");\r\n    const [submitted, setSubmitted] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const { isLoggedIn } = useSelector(state => state.auth);\r\n    const { message } = useSelector(state => state.message);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n  console.log(message);\r\n\r\n    const props = {\r\n      message : message,\r\n      display : true,\r\n    }\r\n\r\n    function validateForm() {\r\n      return email.length > 0 && password.length > 0;\r\n     // return true;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n      event.preventDefault();\r\n      setLoading(true);\r\n\r\n    \r\n        dispatch(login(email, password))\r\n          .then(() => {\r\n            navigate('/profile');\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n      <section>\r\n        {message && <AlertDismissible props={props} />}\r\n        {/* {message && (\r\n                <div className=\"form-group alertBox\">\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {message}\r\n                  </div>\r\n                </div>\r\n              )} */}\r\n      <div className=\"headerBackground\">\r\n        \r\n        <div className=\"loginLeft\">\r\n        <Image src=\"../assets/login/white_logo.png\" fluid />\r\n\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group size=\"lg\" controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              </Button>\r\n            </Form.Group>\r\n          \r\n          </Form>\r\n        </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}